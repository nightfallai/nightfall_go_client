---
openapi: 3.0.1
info:
  title: Methods
  description: This API exposes detectors for sensitive data in arbitrary string payloads.
  version: 0.0.1
servers:
- url: https://api.nightfall.ai/
security:
- apiKeyAuth: []
paths:
  "/v2/scan":
    post:
      tags:
      - scan
      summary: Scan for sensitive information in your data
      security:
      - apiKeyAuth: []
      description: Provide a list of arbitrary string data, and scan each item with
        the provided detectors to uncover sensitive information. Returns
        a list equal in size to the number of provided string payloads. The item at
        each list index will be a list of all matches for the provided detectors, or an
        empty list if no occurrences are found.
      operationId: ScanPayloadV2
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ScanRequestV2'
        required: true
      responses:
        '200':
          description: Successful operation
          headers:
            Content-Type:
              description: the content type of the response
              schema:
                type: string
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ScanResponseV2Array'
      x-amazon-apigateway-integration:
        responses:
          default:
            statusCode: '200'
            responseParameters:
              method.response.header.Content-Type: "'application/json'"
        uri: arn:aws:apigateway:us-west-2:lambda:path/2015-03-31/functions/arn:aws:lambda:us-west-2:053737762392:function:api_platform_lambda/invocations
        passthroughBehavior: when_no_match
        httpMethod: POST
        type: aws_proxy
      x-codegen-request-body-name: ScanReqV2
components:
  schemas:
    Empty:
      type: object
    ScanRequestV2:
      type: object
      properties:
        config:
          type: object
          properties:
            conditionSetUUID:
              type: string
              description: The UUID corresponding to the condition set with which you wish to scan the request payload.
            conditionSet:
              type: object
              description: A conditionSet contains a list of conditions with which you wish to scan the request payload.
              properties:
                logicalOp:
                  type: string
                  description: Evaluate whether the conditions satisfy ANY or ALL criteria. Empty value defaults to ANY.
                conditions:
                  type: array
                  description: A list of conditions.
                  items:
                    "$ref": "#/components/schemas/Condition"
          description: Config can contain either a conditionSetUUID or a list of inline conditions to scan the request payload with.
        payload:
          type: array
          items:
            type: string
            description: A collection of strings to scan.
          description: The text sample(s) you wish to scan. This data is passed
            as a string list, so you may choose to segment your text into multiple
            items for better granularity. The aggregate size of your text (summed across
            all items in the list) must not exceed 500 KB for any individual request,
            and the number of items in that list may not exceed 50,000.
      description: The request body of the /v2/scan endpoint
    ScanResponseArray:
      type: array
      items:
        "$ref": "#/components/schemas/EachItemArray"
    EachItemArray:
      type: array
      items:
        "$ref": "#/components/schemas/ScanResponse"
    ScanResponse:
      type: object
      properties:
        fragment:
          type: string
          description: The text sample that was flagged.
        detector:
          type: string
          description: The data type flagged in the text fragment.
        confidence:
          type: object
          properties:
            bucket:
              $ref: '#/components/schemas/Confidence'
        location:
          type: object
          properties:
            byteRange:
              type: object
              properties:
                start:
                  type: integer
                  description: The index of the fragment's starting byte.
                end:
                  type: integer
                  description: The index of the fragment's ending byte.
            unicodeRange:
              type: object
              properties:
                start:
                  type: integer
                  description: The index of the fragment's starting unicode character.
                end:
                  type: integer
                  description: The index of the fragment's ending unicode character.
    ScanResponseV2Array:
      type: array
      items:
        "$ref": "#/components/schemas/EachItemV2Array"
    EachItemV2Array:
      type: array
      items:
        "$ref": "#/components/schemas/ScanResponseV2"
    ScanResponseV2:
      type: object
      properties:
        fragment:
          type: string
          description: The text sample that was flagged.
        detectorName:
          type: string
          description: The data type flagged in the text fragment.
        confidence:
          $ref: '#/components/schemas/Confidence'
        location:
          type: object
          properties:
            byteRange:
              type: object
              properties:
                start:
                  type: integer
                  description: The index of the fragment's starting byte.
                end:
                  type: integer
                  description: The index of the fragment's ending byte.
            unicodeRange:
              type: object
              properties:
                start:
                  type: integer
                  description: The index of the fragment's starting unicode character.
                end:
                  type: integer
                  description: The index of the fragment's ending unicode character.
    Condition:
      type: object
      properties:
        minNumFindings:
          type: integer
          description: The minimum number of findings required in order for this detector to be reported.
        minConfidence:
          $ref: '#/components/schemas/Confidence'
        detector:
          $ref: '#/components/schemas/Detector'
      description: An inclusion condition within a condition set.
    Detector:
      type: object
      properties:
        displayName:
          type: string
          description: The display name for this detector's findings in the response.
        detectorType:
          $ref: '#/components/schemas/DetectorType'
        nightfallDetector:
          $ref: '#/components/schemas/NightfallDetectorType'
        regex:
          $ref: '#/components/schemas/Regex'
        wordList:
          $ref: '#/components/schemas/WordList'
        contextRules:
          type: array
          items:
            "$ref": '#/components/schemas/ContextRule'
          description: A list of context rules.
        exclusionRules:
          type: array
          items:
            "$ref": '#/components/schemas/ExclusionRule'
          description: A list of exclusion rules.
    ContextRule:
      type: object
      properties:
        regex:
          $ref: '#/components/schemas/Regex'
        proximity:
          type: object
          properties:
            windowBefore:
              type: integer
              description: The number of leading characters to include as context before the finding itself.
            windowAfter:
              type: integer
              description: The number of trailing characters to include as context after the finding itself.
          description: The object containing the length of characters before and after finding to evaluate context.
        confidenceAdjustment:
          type: object
          properties:
            fixedConfidence:
              $ref: '#/components/schemas/Confidence'
          description: The object containing the confidence level to adjust findings to.
      description: A context rule adjusts the finding confidence based on surrounding context.
    ExclusionRule:
      type: object
      properties:
        matchType:
          $ref: '#/components/schemas/MatchType'
        exclusionType:
          $ref: '#/components/schemas/ExclusionType'
        regex:
          $ref: '#/components/schemas/Regex'
        wordList:
          $ref: '#/components/schemas/WordList'
      description: An exclusion rule removes findings that match the rule's given exlusion.
    Regex:
      type: object
      properties:
        pattern:
          type: string
          description: The regex pattern to match on.
        isCaseSensitive:
          type: boolean
          description: The case sensitivity for the regex pattern.
      description: The regex object for the regex detector, context rules, and exclusion rules.
    WordList:
      type: object
      properties:
        values:
          type: array
          items:
            type: string
          description: A list of words for wordList.
        isCaseSensitive:
          type: boolean
          description: The case sensitivity for words in the wordList. If false, ignore the case of findings.
      description: The WordList object for wordList detector and exclusion rules.
    NightfallDetectorType:
      type: string
      enum: &DETECTOR
        - AMERICAN_BANKERS_CUSIP_ID
        - API_KEY
        - CANADA_BC_PHN
        - CANADA_BANK_ACCOUNT
        - CANADA_DRIVERS_LICENSE_NUMBER
        - CANADA_GOVERNMENT_ID
        - CANADA_OHIP
        - CANADA_PASSPORT
        - CANADA_PERMANENT_RESIDENT_NUMBER
        - CANADA_QUEBEC_HIN
        - CANADA_SOCIAL_INSURANCE_NUMBER
        - CREDIT_CARD_NUMBER
        - CRYPTOGRAPHIC_KEY
        - DATABASE_CONNECTION_STRING
        - DATE
        - DATE_OF_BIRTH
        - EMAIL_ADDRESS
        - FDA_NATIONAL_DRUG_NAME
        - FRANCE_CNI
        - FRANCE_INSEE
        - FRANCE_PASSPORT
        - GERMANY_IDENTITY_NUMBER
        - GERMANY_PASSPORT
        - GCP_CREDENTIALS
        - IBAN_CODE
        - ICD10_CODE
        - ICD10_DIAGNOSIS_DESCRIPTION
        - ICD9_CODE
        - ICD9_DIAGNOSIS_DESCRIPTION
        - IMEI_HARDWARE_ID
        - IP_ADDRESS
        - IRELAND_PASSPORT
        - IRELAND_PPSN
        - LOCATION
        - MAC_ADDRESS
        - PERSON_NAME
        - PHONE_NUMBER
        - RANDOMLY_GENERATED_TOKEN
        - SCOTLAND_COMMUNITY_HEALTH_INDEX_NUMBER
        - STREET_ADDRESS
        - SWIFT_CODE
        - UK_DRIVERS_LICENSE_NUMBER
        - UK_NATIONAL_HEALTH_SERVICE_NUMBER
        - UK_NATIONAL_INSURANCE_NUMBER
        - UK_PASSPORT
        - UK_TAXPAYER_REFERENCE
        - US_BANK_ROUTING_MICR
        - US_DRIVERS_LICENSE_NUMBER
        - US_EMPLOYER_IDENTIFICATION_NUMBER
        - US_HEALTHCARE_NPI
        - US_HEALTH_INSURANCE_CLAIM_NUMBER
        - US_INDIVIDUAL_TAXPAYER_IDENTIFICATION_NUMBER
        - US_MEDICARE_BENEFICIARY_IDENTIFIER
        - US_PASSPORT
        - US_SOCIAL_SECURITY_NUMBER
        - US_VEHICLE_IDENTIFICATION_NUMBER
      description: The name for a Nightfall detector.
    Confidence:
      type: string
      enum: &CONFIDENCE
        - VERY_UNLIKELY
        - UNLIKELY
        - POSSIBLE
        - LIKELY
        - VERY_LIKELY
      description: The confidence level of a finding.
    DetectorType:
      type: string
      enum:
        - NIGHTFALL_DETECTOR
        - REGEX
        - WORD_LIST
      description: The type of detector.
    MatchType:
      type: string
      enum:
        - PARTIAL
        - FULL
      description: The type of match for a pattern.
    ExclusionType:
      type: string
      enum:
        - REGEX
        - WORD_LIST
      description: The type of exclusion rule.
  securitySchemes:
    apiKeyAuth:
      type: apiKey
      name: x-api-key
      in: header
x-amazon-apigateway-documentation:
  version: v2.1
  createdDate: '2016-11-17T07:03:59.000Z'
  documentationParts:
  - location:
      type: API
    properties:
      info:
        description: This API exposes detectors for sensitive data in arbitrary string
          payloads.
  - location:
      type: METHOD
      path: "/v2/scan"
      method: POST
    properties:
      tags:
      - scan
      summary: Verify whether the given string matches any of the sensitive data types
  - location:
      type: REQUEST_BODY
      path: "/v2/scan"
      method: POST
    properties:
      description: Object containing the string payload to scan, as well as the sensitive
        data types to verify against.
  - location:
      type: RESPONSE
      method: "*"
      statusCode: '200'
    properties:
      description: Successful operation
x-amazon-apigateway-gateway-responses:
  MISSING_AUTHENTICATION_TOKEN:
    statusCode: 404
    responseTemplates:
      application/json: |-
        {
             "message": "resource not found",
             "path": "$context.path",
             "httpMethod": "$context.httpMethod",
             "statusCode": 404
        }
