/*
Methods

This API exposes detectors for sensitive data in arbitrary string payloads.

API version: 0.0.1
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// ScanRequestV2Config Config can contain either a conditionSetUUID or a list of inline conditions to scan the request payload with.
type ScanRequestV2Config struct {
	// The UUID corresponding to the condition set with which you wish to scan the request payload.
	ConditionSetUUID *string `json:"conditionSetUUID,omitempty"`
	ConditionSet *ScanRequestV2ConfigConditionSet `json:"conditionSet,omitempty"`
}

// NewScanRequestV2Config instantiates a new ScanRequestV2Config object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewScanRequestV2Config() *ScanRequestV2Config {
	this := ScanRequestV2Config{}
	return &this
}

// NewScanRequestV2ConfigWithDefaults instantiates a new ScanRequestV2Config object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewScanRequestV2ConfigWithDefaults() *ScanRequestV2Config {
	this := ScanRequestV2Config{}
	return &this
}

// GetConditionSetUUID returns the ConditionSetUUID field value if set, zero value otherwise.
func (o *ScanRequestV2Config) GetConditionSetUUID() string {
	if o == nil || o.ConditionSetUUID == nil {
		var ret string
		return ret
	}
	return *o.ConditionSetUUID
}

// GetConditionSetUUIDOk returns a tuple with the ConditionSetUUID field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ScanRequestV2Config) GetConditionSetUUIDOk() (*string, bool) {
	if o == nil || o.ConditionSetUUID == nil {
		return nil, false
	}
	return o.ConditionSetUUID, true
}

// HasConditionSetUUID returns a boolean if a field has been set.
func (o *ScanRequestV2Config) HasConditionSetUUID() bool {
	if o != nil && o.ConditionSetUUID != nil {
		return true
	}

	return false
}

// SetConditionSetUUID gets a reference to the given string and assigns it to the ConditionSetUUID field.
func (o *ScanRequestV2Config) SetConditionSetUUID(v string) {
	o.ConditionSetUUID = &v
}

// GetConditionSet returns the ConditionSet field value if set, zero value otherwise.
func (o *ScanRequestV2Config) GetConditionSet() ScanRequestV2ConfigConditionSet {
	if o == nil || o.ConditionSet == nil {
		var ret ScanRequestV2ConfigConditionSet
		return ret
	}
	return *o.ConditionSet
}

// GetConditionSetOk returns a tuple with the ConditionSet field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ScanRequestV2Config) GetConditionSetOk() (*ScanRequestV2ConfigConditionSet, bool) {
	if o == nil || o.ConditionSet == nil {
		return nil, false
	}
	return o.ConditionSet, true
}

// HasConditionSet returns a boolean if a field has been set.
func (o *ScanRequestV2Config) HasConditionSet() bool {
	if o != nil && o.ConditionSet != nil {
		return true
	}

	return false
}

// SetConditionSet gets a reference to the given ScanRequestV2ConfigConditionSet and assigns it to the ConditionSet field.
func (o *ScanRequestV2Config) SetConditionSet(v ScanRequestV2ConfigConditionSet) {
	o.ConditionSet = &v
}

func (o ScanRequestV2Config) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.ConditionSetUUID != nil {
		toSerialize["conditionSetUUID"] = o.ConditionSetUUID
	}
	if o.ConditionSet != nil {
		toSerialize["conditionSet"] = o.ConditionSet
	}
	return json.Marshal(toSerialize)
}

type NullableScanRequestV2Config struct {
	value *ScanRequestV2Config
	isSet bool
}

func (v NullableScanRequestV2Config) Get() *ScanRequestV2Config {
	return v.value
}

func (v *NullableScanRequestV2Config) Set(val *ScanRequestV2Config) {
	v.value = val
	v.isSet = true
}

func (v NullableScanRequestV2Config) IsSet() bool {
	return v.isSet
}

func (v *NullableScanRequestV2Config) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableScanRequestV2Config(val *ScanRequestV2Config) *NullableScanRequestV2Config {
	return &NullableScanRequestV2Config{value: val, isSet: true}
}

func (v NullableScanRequestV2Config) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableScanRequestV2Config) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


