/*
Methods

This API exposes detectors for sensitive data in arbitrary string payloads.

API version: 0.0.1
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// ContextRuleProximity The object containing the length of characters before and after finding to evaluate context.
type ContextRuleProximity struct {
	// The number of leading characters to include as context before the finding itself.
	WindowBefore *int32 `json:"windowBefore,omitempty"`
	// The number of trailing characters to include as context after the finding itself.
	WindowAfter *int32 `json:"windowAfter,omitempty"`
}

// NewContextRuleProximity instantiates a new ContextRuleProximity object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewContextRuleProximity() *ContextRuleProximity {
	this := ContextRuleProximity{}
	return &this
}

// NewContextRuleProximityWithDefaults instantiates a new ContextRuleProximity object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewContextRuleProximityWithDefaults() *ContextRuleProximity {
	this := ContextRuleProximity{}
	return &this
}

// GetWindowBefore returns the WindowBefore field value if set, zero value otherwise.
func (o *ContextRuleProximity) GetWindowBefore() int32 {
	if o == nil || o.WindowBefore == nil {
		var ret int32
		return ret
	}
	return *o.WindowBefore
}

// GetWindowBeforeOk returns a tuple with the WindowBefore field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ContextRuleProximity) GetWindowBeforeOk() (*int32, bool) {
	if o == nil || o.WindowBefore == nil {
		return nil, false
	}
	return o.WindowBefore, true
}

// HasWindowBefore returns a boolean if a field has been set.
func (o *ContextRuleProximity) HasWindowBefore() bool {
	if o != nil && o.WindowBefore != nil {
		return true
	}

	return false
}

// SetWindowBefore gets a reference to the given int32 and assigns it to the WindowBefore field.
func (o *ContextRuleProximity) SetWindowBefore(v int32) {
	o.WindowBefore = &v
}

// GetWindowAfter returns the WindowAfter field value if set, zero value otherwise.
func (o *ContextRuleProximity) GetWindowAfter() int32 {
	if o == nil || o.WindowAfter == nil {
		var ret int32
		return ret
	}
	return *o.WindowAfter
}

// GetWindowAfterOk returns a tuple with the WindowAfter field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ContextRuleProximity) GetWindowAfterOk() (*int32, bool) {
	if o == nil || o.WindowAfter == nil {
		return nil, false
	}
	return o.WindowAfter, true
}

// HasWindowAfter returns a boolean if a field has been set.
func (o *ContextRuleProximity) HasWindowAfter() bool {
	if o != nil && o.WindowAfter != nil {
		return true
	}

	return false
}

// SetWindowAfter gets a reference to the given int32 and assigns it to the WindowAfter field.
func (o *ContextRuleProximity) SetWindowAfter(v int32) {
	o.WindowAfter = &v
}

func (o ContextRuleProximity) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.WindowBefore != nil {
		toSerialize["windowBefore"] = o.WindowBefore
	}
	if o.WindowAfter != nil {
		toSerialize["windowAfter"] = o.WindowAfter
	}
	return json.Marshal(toSerialize)
}

type NullableContextRuleProximity struct {
	value *ContextRuleProximity
	isSet bool
}

func (v NullableContextRuleProximity) Get() *ContextRuleProximity {
	return v.value
}

func (v *NullableContextRuleProximity) Set(val *ContextRuleProximity) {
	v.value = val
	v.isSet = true
}

func (v NullableContextRuleProximity) IsSet() bool {
	return v.isSet
}

func (v *NullableContextRuleProximity) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableContextRuleProximity(val *ContextRuleProximity) *NullableContextRuleProximity {
	return &NullableContextRuleProximity{value: val, isSet: true}
}

func (v NullableContextRuleProximity) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableContextRuleProximity) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


